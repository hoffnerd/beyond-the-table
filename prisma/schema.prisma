// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// -------------------------------------------- USER --------------------------------------------

enum Role {
    BLOCKED
    UNAUTHORIZED
    USER
    TESTER
    ADMIN
}

enum Visibility {
    PUBLIC
    UNLISTED
    INTERNAL
    NOONE
}

model Account {
    id                 String  @id @default(cuid())
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?  @db.Text
    access_token       String?  @db.Text
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?  @db.Text
    session_state      String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model User {
    id            String    @id @default(cuid())
    role          Role      @default(USER)
    tags          Json?
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime
    
    @@unique([identifier, token])
}




// -------------------------------------------- DATA --------------------------------------------

model Character {
    id String @id @default(cuid())
    userEmail String
    visibility Visibility @default(INTERNAL)
    name String
    image Json?
    baseData Json?
    abilities Json?
    skills Json?
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Upload {
    id String @id @default(cuid())
    userEmail String
    filename String
    createdAt DateTime @default(now())
}